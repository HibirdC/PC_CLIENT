////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	title_widget.h
//
// summary:	最大化、最小化、关闭等
////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef TITLEWIDGET_H
#define TITLEWIDGET_H

#include <QWidget>
#include <QLabel>
#include <QPushButton>
#include <QMouseEvent>
#include <QHBoxLayout>
#include <QSignalMapper>
#include <QVBoxLayout>
#include <memory>


class TitleWidget : public QWidget
{
    Q_OBJECT
public:
    explicit TitleWidget(QWidget *parent = 0);
	void translateLanguage();
    void setEnabledMinBtn(bool isEnabled);
	virtual void paintEvent(QPaintEvent *event);
signals:


    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>	Shows the minimum. </summary>
    ///
    /// <remarks>	田恒, 2016/12/12. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    void showMin();

	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Shows the maximum. </summary>
	///
	/// <remarks>	田恒, 2016/12/12. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void showMax(bool status);


	////////////////////////////////////////////////////////////////////////////////////////////////////
	/// <summary>	Closes the widget. </summary>
	///
	/// <remarks>	田恒, 2016/12/12. </remarks>
	////////////////////////////////////////////////////////////////////////////////////////////////////

	void closeWidget();
	

public:
    QPushButton *min_button; //最小化
	QPushButton *max_button;
    QPushButton *close_button; //关闭


public slots:
	void updateMaxStatus(bool status);
    void showMaxSlot(bool status);
};

typedef std::shared_ptr<TitleWidget> TitleWidgetPtr;

#endif // TITLEWIDGET_H
